[1/10] Performing build step for 'bootloader'
[1/1] cd /home/jin/workspaces/esp32workspace/desktop_controller/build/bootloader/esp-idf/esptool_py && /home/jin/.espressif/python_env/idf5.3_py3.10_env/bin/python /home/jin/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /home/jin/workspaces/esp32workspace/desktop_controller/build/bootloader/bootloader.bin
Bootloader binary size 0x5260 bytes. 0x2da0 bytes (36%) free.
[2/10] No install step for 'bootloader'
[3/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/desktop_controller.c.obj
[4/10] Completed 'bootloader'
[5/10] Linking C static library esp-idf/main/libmain.a
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable desktop_controller.elf
[8/10] Generating binary image from built executable
esptool.py v4.8.dev4
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /home/jin/workspaces/esp32workspace/desktop_controller/build/desktop_controller.bin
[9/10] cd /home/jin/workspaces/esp32workspace/desktop_controller/build/esp-idf/esptool_py && /home/jin/.espressif/python_env/idf5.3_py3.10_env/bin/python /home/jin/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/jin/workspaces/esp32workspace/desktop_controller/build/partition_table/partition-table.bin /home/jin/workspaces/esp32workspace/desktop_controller/build/desktop_controller.bin
desktop_controller.bin binary size 0x3f390 bytes. Smallest app partition is 0x100000 bytes. 0xc0c70 bytes (75%) free.
[9/10] cd /home/jin/esp/esp-idf/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/jin/esp/esp-idf -D "SERIAL_TOOL=/home/jin/.espressif/python_env/idf5.3_py3.10_env/bin/python;;/home/jin/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32s3" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/jin/workspaces/esp32workspace/desktop_controller/build -P /home/jin/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32s3 -p /dev/ttyACM1 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 2MB 0x0 bootloader/bootloader.bin 0x10000 desktop_controller.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.8.dev4
Serial port /dev/ttyACM1
Connecting...
Chip is ESP32-S3 (QFN56) (revision v0.1)
Features: WiFi, BLE, Embedded PSRAM 8MB (AP_3v3)
Crystal is 40MHz
MAC: 34:85:18:75:f3:0c
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00000000 to 0x00005fff...
Flash will be erased from 0x00010000 to 0x0004ffff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 21088 bytes to 13045...
Writing at 0x00000000... (100 %)
Wrote 21088 bytes (13045 compressed) at 0x00000000 in 0.3 seconds (effective 526.2 kbit/s)...
Hash of data verified.
Compressed 258960 bytes to 134436...
Writing at 0x00010000... (11 %)
Writing at 0x0001cda4... (22 %)
Writing at 0x00024bd9... (33 %)
Writing at 0x0002b90e... (44 %)
Writing at 0x00031e93... (55 %)
Writing at 0x0003976b... (66 %)
Writing at 0x0004168c... (77 %)
Writing at 0x00047433... (88 %)
Writing at 0x0004dac0... (100 %)
Wrote 258960 bytes (134436 compressed) at 0x00010000 in 1.7 seconds (effective 1226.9 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.0 seconds (effective 666.0 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
